{"version":3,"sources":["../../src/schemas/user.js"],"names":["userSchema","mongoose","Schema","name","type","String","required","cpf","email","image","motherName","password","birthday","Date","depositedMoney","Number","default","address","zipcode","street","neighborhood","number","complement","bankCards","cardId","Types","ObjectId","bankName","cardNumber","flag","dueDate","securityNumber","isLoggedIn","Boolean","creationDate","now","UserSchema","model","config","UserCollection"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,aAAaC,mBAASC,MAAT,CAAgB;AACjCC,QAAM,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAD2B;AAEjCC,OAAK,EAAEH,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAF4B;AAGjCE,SAAO,EAAEJ,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAH0B;AAIjCG,SAAO,EAAEL,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EAJ0B;AAKjCI,cAAY,EAAEN,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EALqB;AAMjCK,YAAU,EAAEP,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EANuB;AAOjCM,YAAU,EAAER,MAAMS,IAAR,EAAcP,UAAU,IAAxB,EAPuB;AAQjCQ,kBAAgB,EAAEV,MAAMW,MAAR,EAAgBT,UAAU,KAA1B,EAAiCU,SAAS,GAA1C,EARiB;AASjCC,WAAS;AACPC,aAAS,EAAGd,MAAMC,MAAT,EAAiBC,UAAU,IAA3B,EADF;AAEPa,YAAQ,EAAEf,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAFD;AAGPc,kBAAc,EAAEhB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAHP;AAIPe,YAAQ,EAAEjB,MAAMW,MAAR,EAAgBT,UAAU,IAA1B,EAJD;AAKPgB,gBAAY,EAAElB,MAAMC,MAAR,EAAgBC,UAAU,KAA1B;AALL,GATwB;AAgBjCiB,aAAW,CAAC;AACVC,YAAQ,EAAEpB,MAAMH,mBAASC,MAAT,CAAgBuB,KAAhB,CAAsBC,QAA9B,EAAwCpB,UAAU,KAAlD,EADE;AAEVH,UAAM,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EAFI;AAGVqB,cAAU,EAAEvB,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EAHA;AAIVsB,gBAAY,EAAExB,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EAJF;AAKVuB,UAAM,EAAEzB,MAAMC,MAAR,EAAgBC,UAAU,KAA1B,EALI;AAMVwB,aAAS,EAAE1B,MAAMS,IAAR,EAAcP,UAAU,KAAxB,EANC;AAOVyB,oBAAgB,EAAE3B,MAAMW,MAAR,EAAgBT,UAAU,KAA1B;AAPN,GAAD,CAhBsB;AAyBjC0B,cAAY,EAAE5B,MAAM6B,OAAR,EAAiB3B,UAAU,KAA3B,EAAkCU,SAAS,KAA3C,EAzBqB;AA0BjCkB,gBAAc,EAAE9B,MAAMS,IAAR,EAAcP,UAAU,KAAxB,EAA+BU,SAASH,KAAKsB,GAA7C;AA1BmB,CAAhB,CAAnB;;AA6BA,IAAMC,aAAanC,mBAASoC,KAAT,CAAeC,yBAAOC,cAAtB,EAAsCvC,UAAtC,CAAnB;;kBAEeoC,U","file":"user.js","sourcesContent":["import mongoose from 'mongoose'\r\nimport config from '../configurations'\r\n\r\nconst userSchema = mongoose.Schema({\r\n  name: { type: String, required: true },\r\n  cpf: { type: String, required: true },\r\n  email: { type: String, required: true },\r\n  image: { type: String, required: false },\r\n  motherName: { type: String, required: true },\r\n  password: { type: String, required: true },\r\n  birthday: { type: Date, required: true },\r\n  depositedMoney: { type: Number, required: false, default: 0.0 },\r\n  address: {\r\n    zipcode: {  type: String, required: true },\r\n    street: { type: String, required: true },\r\n    neighborhood: { type: String, required: true },\r\n    number: { type: Number, required: true },\r\n    complement: { type: String, required: false }\r\n  },\r\n  bankCards: [{\r\n    cardId: { type: mongoose.Schema.Types.ObjectId, required: false},\r\n    name: { type: String, required: false },\r\n    bankName: { type: String, required: false },\r\n    cardNumber: { type: String, required: false },\r\n    flag: { type: String, required: false },\r\n    dueDate: { type: Date, required: false },\r\n    securityNumber: { type: Number, required: false }\r\n  }],\r\n  isLoggedIn: { type: Boolean, required: false, default: false },\r\n  creationDate: { type: Date, required: false, default: Date.now }\r\n})\r\n\r\nconst UserSchema = mongoose.model(config.UserCollection, userSchema)\r\n\r\nexport default UserSchema\r\n"]}